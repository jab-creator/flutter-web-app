rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() { 
      return request.auth != null; 
    }
    
    function isOwner(userId) { 
      return isSignedIn() && request.auth.uid == userId; 
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // Users collection
    match /users/{uid} {
      // Users can read and update their own profile
      allow read, update: if isOwner(uid);
      // Users can create their own profile (uid must match auth uid)
      allow create: if isSignedIn() && request.auth.uid == uid;
      // No delete allowed (data retention)
      allow delete: if false;
    }

    // Children collection
    match /children/{childId} {
      // Parents can read their own children
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      // Parents can create children (must set userId to their own uid)
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      // Parents can update and delete their own children
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Gift pages collection
    match /giftPages/{pageId} {
      // Public read if page is marked as public
      allow get: if resource.data.isPublic == true || 
        (isSignedIn() && isOwner(get(/databases/$(database)/documents/children/$(resource.data.childId)).data.userId));
      
      // No public listing - always query by specific ID or through Cloud Functions
      allow list: if false;
      
      // Parents can create, update, and delete gift pages for their children
      allow create, update, delete: if isSignedIn() &&
        isOwner(get(/databases/$(database)/documents/children/$(request.resource.data.childId)).data.userId);
    }

    // Gifts collection
    match /gifts/{giftId} {
      // Parents can read gifts for their children
      allow get, list: if isSignedIn() &&
        isOwner(get(/databases/$(database)/documents/children/$(resource.data.childId)).data.userId);
      
      // Gifts can only be created, updated, or deleted via Cloud Functions (server-side)
      // This ensures payment processing integrity
      allow create, update, delete: if false;
    }

    // Slug index collection
    match /slugIndex/{slug} {
      // Public read access for slug resolution
      allow get: if true;
      
      // No public listing
      allow list: if false;
      
      // Only admins or Cloud Functions can manage slug index
      // This is typically handled by Cloud Functions during child creation
      allow create, update, delete: if isAdmin();
    }

    // Catch-all rule - deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}